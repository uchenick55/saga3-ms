{"version":3,"file":"static/js/28.a2e7260d.chunk.js","mappings":"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","sources":["common/hoc/withRouter.jsx","components/UserPosts/UserCard.tsx","components/UserPosts/UserPosts.tsx"],"sourcesContent":["import React from \"react\";\nimport {useParams} from \"react-router-dom\";\n\nlet withRouter = (Children) => {\n    const WithRouterWithProps = (props) => {\n        const ItemId=Number({params: useParams()}.params['*']);\n        return <Children {...props} ItemId={ItemId}/>\n    }\n    return WithRouterWithProps\n}\nexport default withRouter\n","import {UserDataType} from \"../../common/commonTypes/commonTypes\";\r\nimport React from \"react\";\r\n\r\ntype UserCardType = {\r\n    UserData: UserDataType\r\n}\r\nconst UserCard: React.FC<UserCardType> = ({UserData}) => { // отрисовка карточки пользователя (автора постов)\r\n    const {id, name, username, email, address, phone, website, company} = UserData\r\n    return <div>\r\n        <ul>\r\n            <li>id: {id}</li>\r\n            <li>name: {name}</li>\r\n            <li>username: {username}</li>\r\n            <li>email: {email}</li>\r\n            <li><b>address</b>\r\n                <ul>\r\n                    <li> street: {address?.street}</li>\r\n                    <li> suite: {address?.suite}</li>\r\n                    <li> city: {address?.city}</li>\r\n                    <li> zipcode: {address?.zipcode}</li>\r\n                    <li><b>geo</b>\r\n                        <ul>\r\n                            <li> {address?.geo?.lat}  </li>\r\n                            <li> {address?.geo?.lng}  </li>\r\n                        </ul>\r\n                    </li>\r\n                </ul>\r\n            </li>\r\n            <li>phone: {phone}</li>\r\n            <li>website: {website}</li>\r\n            <div><b>company</b>\r\n                <ul>\r\n                    <li> name: {company?.name}</li>\r\n                    <li> catchPhrase: {company?.catchPhrase}</li>\r\n                    <li> bs: {company?.bs}</li>\r\n                </ul>\r\n            </div>\r\n        </ul>\r\n    </div>\r\n}\r\nexport default UserCard","import React, {useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {UserActions} from \"../../redux/reducers/user-reducer\";\r\nimport {PostType, UserDataType} from \"../../common/commonTypes/commonTypes\";\r\nimport {GlobalStateType} from \"../../redux/store/store-redux\";\r\nimport PostsListRender from \"../PostsListRender/PostsListRender\";\r\nimport {AllPostsActions, PostsInitialState} from \"../../redux/reducers/all-posts-reducer\";\r\nimport {compose} from \"redux\";\r\nimport withRouter from \"../../common/hoc/withRouter\";\r\nimport UserCard from \"./UserCard\";\r\n\r\ntype OwnPropsType = {\r\n    ItemId: number // id пользователя\r\n}\r\nconst UserPosts: React.FC<OwnPropsType> = ({ItemId}) => {\r\n    console.log( \"UserPosts\" )\r\n\r\n    const dispatch = useDispatch()\r\n    const AllPosts: Array<PostType> = useSelector( (state: GlobalStateType) => state.allPosts.AllPosts )  //все посты с сервера\r\n    const UserData: UserDataType = useSelector( (state: GlobalStateType) => state.user.UserData )  //данные автора статей по его ID\r\n\r\n    //отфильтровать посты только по Id выбранного пользователя\r\n    const AllPostsFilteredByUser: Array<PostType> = AllPosts.filter((post:PostType)=>post.userId===ItemId)\r\n\r\n    useEffect(()=>{\r\n        dispatch( UserActions.getUserDataAC(ItemId)  )//получить данные пользователя по его Id\r\n        dispatch( AllPostsActions.setPaginationDataAC( PostsInitialState.PaginationData ) ) // занулить пагинацию\r\n    },[dispatch, ItemId])\r\n\r\n    return <div>\r\n        <h2>Подробности о пользователе</h2>\r\n        <UserCard UserData={UserData}/>\r\n        <PostsListRender PostsList={AllPostsFilteredByUser}/>\r\n\r\n    </div>\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    withRouter// получить данные ID из URL браузера и добавить в пропсы\r\n)( UserPosts )\r\n"],"names":["Children","props","ItemId","Number","useParams","_jsx","_objectSpread","_ref","_address$geo","_address$geo2","UserData","id","name","username","email","address","phone","website","company","children","_jsxs","street","suite","city","zipcode","geo","lat","lng","catchPhrase","bs","compose","withRouter","console","log","dispatch","useDispatch","AllPosts","useSelector","state","allPosts","user","AllPostsFilteredByUser","filter","post","userId","useEffect","UserActions","getUserDataAC","AllPostsActions","setPaginationDataAC","PostsInitialState","PaginationData","UserCard","PostsListRender","PostsList"],"sourceRoot":""}